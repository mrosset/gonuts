#!/usr/bin/env bash

set -ehu

unset GOPATH GOROOT

# TODO add better OS and ARCH logic
OS=linux
ARCH=amd64

# Final
#URL="http://storage.googleapis.com/golang/go1.4.3.${OS}-${ARCH}.tar.gz"
#GIT="https://github.com/golang/go"

# Testing
#URL="http://localhost/go1.4.3.${OS}-${ARCH}.tar.gz"
GIT_URL="/home/strings/src/go.git"
GIT_REPO="out/git.git"
export GOROOT_BOOTSTRAP="$PWD/out/go1.4"
GO1_6="out/go1.6"

# output toolchain version
versions() {
   for i in gcc ld make; do
       #readlink -s $(which $i) || true
       $i --version | head -1
   done
}

# Clone a bare git repository
if [[ ! -d $GIT_REPO ]]; then
    git clone --bare $GIT_URL $GIT_REPO
fi

# Checkout go1.4 branch
if [[ ! -d $GOROOT_BOOTSTRAP ]]; then
    git clone -b go1.4rc2 $GIT_REPO $GOROOT_BOOTSTRAP
fi

# Build go1.4
if [[ ! -f "$GOROOT_BOOTSTRAP/bin/go" ]]; then
    (
        cd "$GOROOT_BOOTSTRAP/src"
        ./make.bash
        # check the binary works
        $GOROOT_BOOTSTRAP/bin/go version
    )
fi

# Checkout go1.4 branch
if [[ ! -d $GO1_6 ]]; then
    git clone -b go1.6 $GIT_REPO $GO1_6
fi

# Finally build go
if [[ ! -f $GO1_6/bin/go ]]; then
    (
        cd "$GO1_6/src"
        ./make.bash
    )
fi

$GO1_6/bin/go version
